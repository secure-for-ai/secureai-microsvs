version: '3.9'

services:
  dev:
      build: 
        context: .
        dockerfile: dockerfile
      # ports:
      #   - "8000:8000"
      #   - "12345:12345"
      #   - "40000:40000"
  #    expose:
  #      - "8000"
  #      - "12345"
  #      - "40000"
      volumes:
        - .:/app
      working_dir: /app/
      command: sleep infinity 
  # demo-api-pg:
  #   #build: ./
  #   image: dockerfile
  #   volumes:
  #     - ./src:/go/src/
  #   working_dir: /go/src/
  #   ports:
  #     - "6552:6552"
  #   depends_on:
  #     - redis
  #     - mongo
  #     - postgres
  #   environment:
  #     - GOPROXY=https://goproxy.cn
  #     - ENV=prod
  #   container_name: secureai-dev-demo-api-pg
  #   entrypoint: go run demo_pg/main.go
  # demo-api-mongo:
  #   #build: ./
  #   image: Dockerfile
  #   volumes:
  #     - ./src:/go/src/
  #   working_dir: /go/src/
  #   ports:
  #     - "6551:6551"
  #   depends_on:
  #     - redis
  #     - mongo
  #     - postgres
  #   environment:
  #     - GOPROXY=https://goproxy.cn
  #     - ENV=prod
  #   container_name: secureai-dev-demo-api-mongo
  #   entrypoint: go run demo_mongo/main.go
  postgres:
    image: postgres:13
    ports:
      - "7000:5432"
    volumes:
      - ./_data/postgres_13:/var/lib/postgresql/data
      - ./pg-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=test
      - POSTGRES_DB=test
    container_name: secureai-dev-postgres
  mongo:
    image: mongo:4.2.6
    ports:
      - "27017:27017"
    volumes:
      - ./_data/mongo:/data/db
      # - ./mongod.conf:/etc/mongod.conf
      - ./replica-init.js:/docker-entrypoint-initdb.d/replica-init.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=gtest
    container_name: secureai-dev-mongo
    # RUN echo "rs.initiate();" > /docker-entrypoint-initdb.d/replica-init.js
    command: ["mongod", "--auth", "--bind_ip_all", "--replSet", "rs0" ]
  redis:
    image: redis
    ports:
      - "6379:6379"
    environment:
      - RedisPass=password
    volumes:
      - ./_data/redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    container_name: secureai-dev-redis
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    # links:
    #   - demo-api-mongo:demo-api-mongo
    container_name: secureai-dev-nginx
